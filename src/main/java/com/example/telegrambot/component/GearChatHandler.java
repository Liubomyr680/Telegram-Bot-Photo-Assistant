package com.example.telegrambot.component;

import com.example.telegrambot.interfaces.UserStateHandler;
import com.example.telegrambot.keyboard.KeyboardFactory;
import org.springframework.ai.chat.client.ChatClient;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;

import java.util.Objects;

@Component
public class GearChatHandler implements UserStateHandler {

    private final ChatClient chatClient;

    public GearChatHandler(ChatClient.Builder chatClientBuilder) {
        this.chatClient = chatClientBuilder.build();
    }

    @Override
    public boolean supports(String state) {
        return "GEAR_CHAT_MODE".equals(state);
    }

    @Override
    public SendMessage handle(String chatId, String messageText) {
        String checkPrompt = """
            –ö–æ—Ä–æ—Ç–∫–æ: —Ü–µ –ø–∏—Ç–∞–Ω–Ω—è —Å—Ç–æ—Å—É—î—Ç—å—Å—è —Ñ–æ—Ç–æ—Ç–µ—Ö–Ω—ñ–∫–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∫–∞–º–µ—Ä–∏, –æ–±'—î–∫—Ç–∏–≤–∏, –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è, —Ñ–æ–Ω)?
            –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –ª–∏—à–µ: —Ç–∞–∫ –∞–±–æ –Ω—ñ.
            –ü–∏—Ç–∞–Ω–Ω—è: %s
            """.formatted(messageText);

        String relevanceAnswer = Objects.requireNonNull(chatClient.prompt()
                        .user(checkPrompt)
                        .call()
                        .content())
                .trim()
                .toLowerCase();

        if (!relevanceAnswer.contains("—Ç–∞–∫")) {
            SendMessage msg = new SendMessage(chatId,
                    "üìå –¶–µ –ø–∏—Ç–∞–Ω–Ω—è –Ω–µ —Å—Ç–æ—Å—É—î—Ç—å—Å—è —Ñ–æ—Ç–æ—Ç–µ—Ö–Ω—ñ–∫–∏.\n–Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –ª–∏—à–µ –∑ —Ç–µ—Ö–Ω—ñ—á–Ω–∏–º–∏ –ø–æ—Ä–∞–¥–∞–º–∏ üì∑");
            msg.setReplyMarkup(KeyboardFactory.exitKeyboard());
            return msg;
        }

        // –ö—Ä–æ–∫ 2: –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç –¥–æ AI
        String advicePrompt = """
            –¢–∏ ‚Äî –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Ñ–æ—Ç–æ-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é.
            –ü–æ—Ä–∞–¥—å —Ñ–æ—Ç–æ—Ç–µ—Ö–Ω—ñ–∫—É (–∫–∞–º–µ—Ä—É, –æ–±'—î–∫—Ç–∏–≤, —Å–≤—ñ—Ç–ª–æ) –¥–ª—è –∑–π–æ–º–∫–∏ —Ç–∏–ø—É: %s.
            –í—ñ–¥–ø–æ–≤—ñ–¥—å —á—ñ—Ç–∫–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∞, –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –∑–∞–¥–∞—î –¥–æ–¥–∞—Ç–∫–æ–≤–µ –ø—Ç–∏–∞–Ω–Ω—è –ø–æ —è–∫—ñ–π—Å—å —ñ–∑ —Å–µ–∫—Ü—ñ–π,
            (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∫–∞–º–µ—Ä–∏, –æ–±'—î–∫—Ç–∏–≤–∏, –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è, —Ñ–æ–Ω) —Ç–æ –¥–∞–≤–∞–π –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Ç—ñ–ª—å–∫–∏ –ø–æ —Ü—ñ–π —Å–µ–∫—Ü—ñ—ó, –Ω–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–Ω–æ–≤ —Ä–æ–∑–ø–∏—Å—É–≤–∞—Ç–∏ –ø—Ä–æ –∫–æ–∂–Ω—É –∑ –Ω–∏—Ö.
            –í—Å—ñ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –ø–æ–≤–∏–Ω–Ω—ñ –±—É—Ç–∏ –Ω–µ –±—ñ–ª—å—à–µ 120 —Å–ª—ñ–≤.
            """.formatted(messageText);

        String aiReply = chatClient.prompt()
                .user(advicePrompt)
                .call()
                .content();

        assert aiReply != null;
        SendMessage msg = new SendMessage(chatId, aiReply);
        msg.setReplyMarkup(KeyboardFactory.exitKeyboard());
        return msg;
    }
}
