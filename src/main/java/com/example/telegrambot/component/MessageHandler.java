package com.example.telegrambot.component;

import com.example.telegrambot.keyboard.KeyboardFactory;
import com.example.telegrambot.service.UserStateService;
import org.springframework.ai.chat.client.ChatClient;
import org.springframework.stereotype.Component;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;

import java.util.Objects;

@Component
public class MessageHandler {

    private final ChatClient chatClient;
    private final UserStateService userStateService;

    public MessageHandler(ChatClient.Builder chatClientBuilder, UserStateService userStateService) {
        this.chatClient = chatClientBuilder.build();
        this.userStateService = userStateService;
    }

    public SendMessage handleTextMessage(String chatId, String messageText) {
        return switch (messageText) {

            case "üì∏ –†–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –§–æ—Ç–æ" -> new SendMessage(chatId,
                    "–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ, —è–∫–µ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤—ñ–¥—Ä–µ–¥–∞–≥—É–≤–∞—Ç–∏ üì∑");

            case "üéØ –Ü–¥–µ—ó –¥–ª—è —Ñ–æ—Ç–æ—Å–µ—Å—ñ—ó" -> new SendMessage(chatId,
                    "–ù–∞–ø–∏—à—ñ—Ç—å —Ç–µ–º—É –∞–±–æ –ø–æ–±–∞–∂–∞–Ω–Ω—è –¥–ª—è —Ñ–æ—Ç–æ—Å–µ—Å—ñ—ó üìù");

            case "üß† AI-–∞–Ω–∞–ª—ñ–∑ –§–æ—Ç–æ" -> new SendMessage(chatId,
                    "–ù–∞–¥—ñ—à–ª—ñ—Ç—å —Ñ–æ—Ç–æ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É —è–∫–æ—Å—Ç—ñ üßê");

            case "üè∑Ô∏è –•–µ—à—Ç–µ–≥–∏ —Ç–∞ –û–ø–∏—Å" -> new SendMessage(chatId,
                    "–ù–∞–¥—ñ—à–ª—ñ—Ç—å –∫–ª—é—á–æ–≤—ñ —Å–ª–æ–≤–∞ –∞–±–æ —Ñ–æ—Ç–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –æ–ø–∏—Å—É —Ç–∞ —Ö–µ—à—Ç–µ–≥—ñ–≤ üìÑ");

            case "üí∞ –ü—Ä–∞–π—Å-–∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä" -> new SendMessage(chatId,
                    "–í–≤–µ–¥—ñ—Ç—å —Ç–∏–ø –∑–π–æ–º–∫–∏ —Ç–∞ —Ç—Ä–∏–≤–∞–ª—ñ—Å—Ç—å (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: '–≤–µ—Å—ñ–ª–ª—è 3 –≥–æ–¥–∏–Ω–∏') üíµ");

            case "üì∑ –ü—ñ–¥–∫–∞–∑–∫–∏ –ø–æ –û–±–ª–∞–¥–Ω–∞–Ω–Ω—é" -> {
                userStateService.setUserState(chatId, "GEAR_CHAT_MODE");
                SendMessage msg = new SendMessage(chatId,
                        "üí¨ –í–∏ —É–≤—ñ–π—à–ª–∏ –≤ —Ä–µ–∂–∏–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó –ø–æ —Ç–µ—Ö–Ω—ñ—Ü—ñ. –ù–∞–ø–∏—à—ñ—Ç—å —Å–≤–æ—î –ø–∏—Ç–∞–Ω–Ω—è:");
                msg.setReplyMarkup(KeyboardFactory.exitKeyboard());
                yield msg;
            }

            case "‚Ü© –í–∏–π—Ç–∏ –∑ —Ä–µ–∂–∏–º—É" -> {
                userStateService.clearUserState(chatId);
                SendMessage msg = new SendMessage(chatId, "‚úÖ –í–∏ –≤–∏–π—à–ª–∏ –∑ —Ä–µ–∂–∏–º—É –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—ó.");
                msg.setReplyMarkup(KeyboardFactory.mainKeyboard());
                yield msg;
            }

            default -> {
                String state = userStateService.getUserState(chatId);

                if ("GEAR_CHAT_MODE".equals(state)) {
                    // –ö—Ä–æ–∫ 1: –∑–∞–ø–∏—Ç –Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫—É —Ç–µ–º–∞—Ç–∏–∫–∏
                    String checkPrompt = """
            –ö–æ—Ä–æ—Ç–∫–æ: —Ü–µ –ø–∏—Ç–∞–Ω–Ω—è —Å—Ç–æ—Å—É—î—Ç—å—Å—è —Ñ–æ—Ç–æ—Ç–µ—Ö–Ω—ñ–∫–∏ (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥, –∫–∞–º–µ—Ä–∏, –æ–±'—î–∫—Ç–∏–≤–∏, –æ—Å–≤—ñ—Ç–ª–µ–Ω–Ω—è)?
            –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –ª–∏—à–µ: —Ç–∞–∫ –∞–±–æ –Ω—ñ.
            –ü–∏—Ç–∞–Ω–Ω—è: %s
            """.formatted(messageText);

                    String relevanceAnswer = Objects.requireNonNull(chatClient.prompt()
                                    .user(checkPrompt)
                                    .call()
                                    .content())
                            .trim()
                            .toLowerCase();

                    if (!relevanceAnswer.contains("—Ç–∞–∫")) {
                        SendMessage msg = new SendMessage(chatId,
                                "üìå –¶–µ –ø–∏—Ç–∞–Ω–Ω—è –Ω–µ —Å—Ç–æ—Å—É—î—Ç—å—Å—è —Ñ–æ—Ç–æ—Ç–µ—Ö–Ω—ñ–∫–∏.\n–Ø –º–æ–∂—É –¥–æ–ø–æ–º–æ–≥—Ç–∏ –ª–∏—à–µ –∑ —Ç–µ—Ö–Ω—ñ—á–Ω–∏–º–∏ –ø–æ—Ä–∞–¥–∞–º–∏ üì∑");
                        msg.setReplyMarkup(KeyboardFactory.exitKeyboard());
                        yield msg;
                    }

                    // –ö—Ä–æ–∫ 2: –Ω–æ—Ä–º–∞–ª—å–Ω–∏–π –∑–∞–ø–∏—Ç –¥–æ AI
                    String advicePrompt = """
            –¢–∏ ‚Äî –ø—Ä–æ—Ñ–µ—Å—ñ–π–Ω–∏–π —Ñ–æ—Ç–æ-–∫–æ–Ω—Å—É–ª—å—Ç–∞–Ω—Ç. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é.
            –ü–æ—Ä–∞–¥—å —Ñ–æ—Ç–æ—Ç–µ—Ö–Ω—ñ–∫—É (–∫–∞–º–µ—Ä—É, –æ–±'—î–∫—Ç–∏–≤, —Å–≤—ñ—Ç–ª–æ) –¥–ª—è –∑–π–æ–º–∫–∏ —Ç–∏–ø—É: %s.
            –í—ñ–¥–ø–æ–≤—ñ–¥—å —á—ñ—Ç–∫–æ —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∞, –Ω–µ –±—ñ–ª—å—à–µ 150 —Å–ª—ñ–≤.
            """.formatted(messageText);

                    String aiReply = chatClient.prompt()
                            .user(advicePrompt)
                            .call()
                            .content();

                    assert aiReply != null;
                    SendMessage msg = new SendMessage(chatId, aiReply);
                    msg.setReplyMarkup(KeyboardFactory.exitKeyboard());
                    yield msg;
                }

                SendMessage msg = new SendMessage(chatId,
                        "ü§ñ –Ø –ø–æ–∫–∏ —â–æ —Ä–æ–∑—É–º—ñ—é —Ç—ñ–ª—å–∫–∏ –∫–æ–º–∞–Ω–¥–∏ –∞–±–æ –Ω–∞—Ç–∏—Å–Ω–µ–Ω–Ω—è –∫–Ω–æ–ø–æ–∫.");
                msg.setReplyMarkup(KeyboardFactory.mainKeyboard());
                yield msg;
            }
        };
    }
}
